- name: Kubernetes master node setup
  hosts: master
  become: yes
  vars_prompt:
    - name: istio_version
      prompt: "Enter the Istio version (e.g., 1.26.2):"
      default: "1.26.2"
      private: no
    - name: helm_version
      prompt: "Enter the Helm version (e.g., 3.17.3):"
      default: "3.17.3"
      private: no
  tasks:
    - name: Install apt dependencies
      apt:
        name:
          - apt-transport-https
          - wget
        state: present
        update_cache: yes
      timeout: 60
  
    - name: Download Helm tarball
      get_url:
        url: "https://get.helm.sh/helm-v{{ helm_version }}-linux-amd64.tar.gz"
        dest: "/tmp/helm-v{{ helm_version }}-linux-amd64.tar.gz"
      timeout: 60
    
    - name: Extract Helm tarball
      unarchive:
        src: "/tmp/helm-v{{ helm_version }}-linux-amd64.tar.gz"
        dest: /tmp
        remote_src: yes
      timeout: 60

    - name: Move Helm binary to /usr/local/bin
      copy:
        src: /tmp/linux-amd64/helm
        dest: /usr/local/bin/helm
        mode: '0755'
      timeout: 60

    - name: Install Flannel CNI
      kubernetes.core.k8s:
        state: present
        src: "https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml"
      timeout: 60

    - name: Wait for Flannel pods to be ready
      kubernetes.core.k8s_info:
        kind: Pod
        namespace: kube-flannel
        label_selectors:
          - "app=flannel"
      register: flannel_pods
      retries: 12
      delay: 5
      until: flannel_pods.resources | length > 0 and (flannel_pods.resources | map(attribute='status.containerStatuses[0].ready') | list) is all true
      timeout: 60
    
    - name: Ensure Multus repo exists
      git:
        repo: https://github.com/k8snetworkplumbingwg/multus-cni.git
        dest: build/multus-cni
        update: yes
      timeout: 60
    
    - name: Apply Multus DaemonSet
      kubernetes.core.k8s:
        state: present
        src: build/multus-cni/deployments/multus-daemonset.yml
      timeout: 60

    - name: Add OpenEBS Helm repo
      community.kubernetes.helm_repository:
        name: openebs
        repo_url: https://openebs.github.io/charts
      timeout: 60
    
    - name: Update Helm repos
      community.kubernetes.helm:
        name: dummy
        state: absent  # Trick to trigger helm repo update
      ignore_errors: true
      timeout: 60

    - name: Install OpenEBS via Helm
      community.kubernetes.helm:
        name: openebs
        chart_ref: openebs/openebs
        release_namespace: openebs
        create_namespace: true
        state: present
      timeout: 60

    - name: Set OpenEBS hostpath as default storageclass
      kubernetes.core.k8s:
        kind: StorageClass
        name: openebs-hostpath
        merge_type: strategic
        resource_definition:
          metadata:
            annotations:
              storageclass.kubernetes.io/is-default-class: "true"
      timeout: 60
    
    - name: Apply CNAO namespace
      kubernetes.core.k8s:
        state: present
        src: https://github.com/kubevirt/cluster-network-addons-operator/releases/download/v0.96.0/namespace.yaml
      timeout: 60
    
    - name: Apply CNAO CRD
      kubernetes.core.k8s:
        state: present
        src: https://github.com/kubevirt/cluster-network-addons-operator/releases/download/v0.96.0/network-addons-config.crd.yaml
      timeout: 60

    - name: Apply CNAO Operator
      kubernetes.core.k8s:
        state: present
        src: https://github.com/kubevirt/cluster-network-addons-operator/releases/download/v0.96.0/operator.yaml
      timeout: 60

    - name: Apply user network-addons-config.yaml
      kubernetes.core.k8s:
        state: present
        src: https://raw.githubusercontent.com/sandyxd18/k8s-5g-manifest/refs/heads/main/networking/network-addons-config.yaml
      timeout: 60

    - name: Download and install Istio
      shell: |
        curl -L https://istio.io/downloadIstio | ISTIO_VERSION={{ istio_version }} TARGET_ARCH=x86_64 sh -
        echo 'export PATH="$PATH:$(pwd)/istio-{{ istio_version }}/bin"' >> ~/.bashrc
      args:
        executable: /bin/bash
      timeout: 60

    - name: Add Istio to PATH for current session
      lineinfile:
        path: ~/.bashrc
        line: 'export PATH="$PATH:$(pwd)/istio-{{ istio_version }}/bin"'
        insertafter: EOF
      timeout: 60